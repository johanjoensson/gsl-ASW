<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="classNeumann__function" kind="class" language="C++" prot="public">
    <compoundname>Neumann_function</compoundname>
    <basecompoundref refid="classSpherical__function" prot="public" virt="non-virtual">Spherical_function</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classNeumann__function_1aa7dba3da2360a9fc8659b94dd93b9081" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Neumann_function::Neumann_function</definition>
        <argsstring>()</argsstring>
        <name>Neumann_function</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/spherical_fun.h" line="53" column="5" bodyfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/spherical_fun.h" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classNeumann__function_1aaefd5bcc12e4e39a215764843ff7a5ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Neumann_function::Neumann_function</definition>
        <argsstring>(const lm l_n)</argsstring>
        <name>Neumann_function</name>
        <param>
          <type>const <ref refid="structlm" kindref="compound">lm</ref></type>
          <declname>l_n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/spherical_fun.h" line="54" column="5" bodyfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/spherical_fun.h" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classNeumann__function_1a69f549add89b25c9d2e08af55c34fcb9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double Neumann_function::operator()</definition>
        <argsstring>(const double x) const override</argsstring>
        <name>operator()</name>
        <reimplements refid="classSpherical__function_1aa8af0f3183f7725ee1f70ce7644ed822">operator()</reimplements>
        <param>
          <type>const double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/spherical_fun.h" line="55" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classSpherical__function_1a08264bc2e2a8310d8aa0ed496d721ebc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Spherical_function::set_l</definition>
        <argsstring>(const lm l_n)</argsstring>
        <name>set_l</name>
        <param>
          <type>const <ref refid="structlm" kindref="compound">lm</ref></type>
          <declname>l_n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/spherical_fun.h" line="26" column="10" bodyfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/spherical_fun.h" bodystart="26" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classSpherical__function_1aa4290f727726c4544d37680df9b10d3f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlm" kindref="compound">lm</ref></type>
        <definition>lm Spherical_function::l</definition>
        <argsstring>() const</argsstring>
        <name>l</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/spherical_fun.h" line="28" column="8" bodyfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/spherical_fun.h" bodystart="28" bodyend="29"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classSpherical__function_1a68bc3c4a536d458d6b0432d7a48ed282" prot="protected" static="no" mutable="no">
        <type><ref refid="structlm" kindref="compound">lm</ref></type>
        <definition>lm Spherical_function::l_m</definition>
        <argsstring></argsstring>
        <name>l_m</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/spherical_fun.h" line="12" column="8" bodyfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/spherical_fun.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Neumann_function</label>
        <link refid="classNeumann__function"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Spherical_function</label>
        <link refid="classSpherical__function"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Neumann_function</label>
        <link refid="classNeumann__function"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Spherical_function</label>
        <link refid="classSpherical__function"/>
        <childnode refid="3" relation="usage">
          <edgelabel>l_m</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>lm</label>
        <link refid="structlm"/>
      </node>
    </collaborationgraph>
    <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/spherical_fun.h" line="50" column="1" bodyfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/spherical_fun.h" bodystart="51" bodyend="56"/>
    <listofallmembers>
      <member refid="classSpherical__function_1aa4290f727726c4544d37680df9b10d3f" prot="public" virt="non-virtual"><scope>Neumann_function</scope><name>l</name></member>
      <member refid="classSpherical__function_1a68bc3c4a536d458d6b0432d7a48ed282" prot="protected" virt="non-virtual"><scope>Neumann_function</scope><name>l_m</name></member>
      <member refid="classNeumann__function_1aa7dba3da2360a9fc8659b94dd93b9081" prot="public" virt="non-virtual"><scope>Neumann_function</scope><name>Neumann_function</name></member>
      <member refid="classNeumann__function_1aaefd5bcc12e4e39a215764843ff7a5ba" prot="public" virt="non-virtual"><scope>Neumann_function</scope><name>Neumann_function</name></member>
      <member refid="classNeumann__function_1a69f549add89b25c9d2e08af55c34fcb9" prot="public" virt="virtual"><scope>Neumann_function</scope><name>operator()</name></member>
      <member refid="classSpherical__function_1aa3d57bcf0f68bfc1736630ed8103e290" prot="public" virt="non-virtual"><scope>Neumann_function</scope><name>operator=</name></member>
      <member refid="classSpherical__function_1a542d453e04488bec25693b1bde4dc34e" prot="public" virt="non-virtual"><scope>Neumann_function</scope><name>operator=</name></member>
      <member refid="classSpherical__function_1a08264bc2e2a8310d8aa0ed496d721ebc" prot="public" virt="non-virtual"><scope>Neumann_function</scope><name>set_l</name></member>
      <member refid="classSpherical__function_1a51088346ab79cbf9b6eb9661a5512352" prot="public" virt="non-virtual"><scope>Neumann_function</scope><name>Spherical_function</name></member>
      <member refid="classSpherical__function_1aaf2d510641ef38d856f97faba997fb8c" prot="public" virt="non-virtual"><scope>Neumann_function</scope><name>Spherical_function</name></member>
      <member refid="classSpherical__function_1a8ce17f2efebc998837dbf49a270b0eb9" prot="public" virt="non-virtual"><scope>Neumann_function</scope><name>Spherical_function</name></member>
      <member refid="classSpherical__function_1a25f1ce863baeabf7707fc6722c6cb701" prot="public" virt="non-virtual"><scope>Neumann_function</scope><name>Spherical_function</name></member>
      <member refid="classSpherical__function_1aca78c8321d098407ac253838ef103a31" prot="public" virt="virtual"><scope>Neumann_function</scope><name>~Spherical_function</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
