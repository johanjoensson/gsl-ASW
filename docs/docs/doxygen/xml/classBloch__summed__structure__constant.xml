<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="classBloch__summed__structure__constant" kind="class" language="C++" prot="public">
    <compoundname>Bloch_summed_structure_constant</compoundname>
    <innerclass refid="classBloch__summed__structure__constant_1_1Container" prot="public">Bloch_summed_structure_constant::Container</innerclass>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classBloch__summed__structure__constant_1aa468a17fca392c1e40e3b6262fc902ba" prot="private" static="no">
        <type>std::tuple&lt; <ref refid="structlm" kindref="compound">lm</ref>, <ref refid="structlm" kindref="compound">lm</ref>, double, GSL::Vector, GSL::Vector &gt;</type>
        <definition>using Bloch_summed_structure_constant::Key =  std::tuple&lt;lm, lm, double, GSL::Vector, GSL::Vector&gt;</definition>
        <argsstring></argsstring>
        <name>Key</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/structure_const.h" line="57" column="1" bodyfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/structure_const.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBloch__summed__structure__constant_1a4e1955e96fbdf0c0139216c8e328c4df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Bloch_summed_structure_constant::Bloch_summed_structure_constant</definition>
        <argsstring>()</argsstring>
        <name>Bloch_summed_structure_constant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/structure_const.h" line="59" column="1" bodyfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/structure_const.h" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classBloch__summed__structure__constant_1af6f5054a3bde1008a6dd2603043a21fd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GSL::Complex</type>
        <definition>GSL::Complex Bloch_summed_structure_constant::calc</definition>
        <argsstring>(const Crystal_t&lt; 3, Atom &gt; &amp;c, const lm &amp;lint, const lm &amp;lp, const lm &amp;l, const double kappa, const GSL::Vector &amp;tau, const GSL::Vector &amp;kp, Bloch_sum::Container &amp;Ds) const</argsstring>
        <name>calc</name>
        <param>
          <type>const <ref refid="classCrystal__t" kindref="compound">Crystal_t</ref>&lt; 3, <ref refid="classAtom" kindref="compound">Atom</ref> &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="structlm" kindref="compound">lm</ref> &amp;</type>
          <declname>lint</declname>
        </param>
        <param>
          <type>const <ref refid="structlm" kindref="compound">lm</ref> &amp;</type>
          <declname>lp</declname>
        </param>
        <param>
          <type>const <ref refid="structlm" kindref="compound">lm</ref> &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>kappa</declname>
        </param>
        <param>
          <type>const GSL::Vector &amp;</type>
          <declname>tau</declname>
        </param>
        <param>
          <type>const GSL::Vector &amp;</type>
          <declname>kp</declname>
        </param>
        <param>
          <type><ref refid="classBloch__sum_1_1Container" kindref="compound">Bloch_sum::Container</ref> &amp;</type>
          <declname>Ds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/structure_const.h" line="60" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classBloch__summed__structure__constant_1ace169b4295b159a56e29dd1b5ae138f2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GSL::Complex</type>
        <definition>GSL::Complex Bloch_summed_structure_constant::calc</definition>
        <argsstring>(const Crystal_t&lt; 3, Atom &gt; &amp;c, const lm &amp;lint, const lm &amp;lp, const lm &amp;l, const double kappa, const GSL::Vector &amp;tau, const GSL::Vector &amp;kp) const</argsstring>
        <name>calc</name>
        <param>
          <type>const <ref refid="classCrystal__t" kindref="compound">Crystal_t</ref>&lt; 3, <ref refid="classAtom" kindref="compound">Atom</ref> &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="structlm" kindref="compound">lm</ref> &amp;</type>
          <declname>lint</declname>
        </param>
        <param>
          <type>const <ref refid="structlm" kindref="compound">lm</ref> &amp;</type>
          <declname>lp</declname>
        </param>
        <param>
          <type>const <ref refid="structlm" kindref="compound">lm</ref> &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>kappa</declname>
        </param>
        <param>
          <type>const GSL::Vector &amp;</type>
          <declname>tau</declname>
        </param>
        <param>
          <type>const GSL::Vector &amp;</type>
          <declname>kp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/structure_const.h" line="61" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classBloch__summed__structure__constant_1a710a39fa2ed7baa7b1b7a202265255cb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>GSL::Complex</type>
        <definition>GSL::Complex Bloch_summed_structure_constant::operator()</definition>
        <argsstring>(const Crystal_t&lt; 3, Atom &gt; &amp;c, const lm lint, const lm &amp;lp, const lm &amp;l, const double kappa, const GSL::Vector &amp;tau, const GSL::Vector &amp;kp, Bloch_sum::Container &amp;Ds) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classCrystal__t" kindref="compound">Crystal_t</ref>&lt; 3, <ref refid="classAtom" kindref="compound">Atom</ref> &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="structlm" kindref="compound">lm</ref></type>
          <declname>lint</declname>
        </param>
        <param>
          <type>const <ref refid="structlm" kindref="compound">lm</ref> &amp;</type>
          <declname>lp</declname>
        </param>
        <param>
          <type>const <ref refid="structlm" kindref="compound">lm</ref> &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>kappa</declname>
        </param>
        <param>
          <type>const GSL::Vector &amp;</type>
          <declname>tau</declname>
        </param>
        <param>
          <type>const GSL::Vector &amp;</type>
          <declname>kp</declname>
        </param>
        <param>
          <type><ref refid="classBloch__sum_1_1Container" kindref="compound">Bloch_sum::Container</ref> &amp;</type>
          <declname>Ds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/structure_const.h" line="62" column="14" bodyfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/structure_const.h" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classBloch__summed__structure__constant_1a4d0b44f5d6a6f59f4d24727682f1582e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>GSL::Complex</type>
        <definition>GSL::Complex Bloch_summed_structure_constant::operator()</definition>
        <argsstring>(const Crystal_t&lt; 3, Atom &gt; &amp;c, const lm lint, const lm &amp;lp, const lm &amp;l, const double kappa, const GSL::Vector &amp;tau, const GSL::Vector &amp;kp) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classCrystal__t" kindref="compound">Crystal_t</ref>&lt; 3, <ref refid="classAtom" kindref="compound">Atom</ref> &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="structlm" kindref="compound">lm</ref></type>
          <declname>lint</declname>
        </param>
        <param>
          <type>const <ref refid="structlm" kindref="compound">lm</ref> &amp;</type>
          <declname>lp</declname>
        </param>
        <param>
          <type>const <ref refid="structlm" kindref="compound">lm</ref> &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>kappa</declname>
        </param>
        <param>
          <type>const GSL::Vector &amp;</type>
          <declname>tau</declname>
        </param>
        <param>
          <type>const GSL::Vector &amp;</type>
          <declname>kp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/structure_const.h" line="66" column="14" bodyfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/structure_const.h" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classBloch__summed__structure__constant_1a77d87ffe9d48e66c9978b4f6a792b82f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GSL::Complex</type>
        <definition>GSL::Complex Bloch_summed_structure_constant::calc_dot</definition>
        <argsstring>(const Crystal_t&lt; 3, Atom &gt; &amp;c, const lm &amp;lint, const lm &amp;lp, const lm &amp;l, const double kappa, const GSL::Vector &amp;tau, const GSL::Vector &amp;kp, Bloch_sum::Container &amp;Ds) const</argsstring>
        <name>calc_dot</name>
        <param>
          <type>const <ref refid="classCrystal__t" kindref="compound">Crystal_t</ref>&lt; 3, <ref refid="classAtom" kindref="compound">Atom</ref> &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="structlm" kindref="compound">lm</ref> &amp;</type>
          <declname>lint</declname>
        </param>
        <param>
          <type>const <ref refid="structlm" kindref="compound">lm</ref> &amp;</type>
          <declname>lp</declname>
        </param>
        <param>
          <type>const <ref refid="structlm" kindref="compound">lm</ref> &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>kappa</declname>
        </param>
        <param>
          <type>const GSL::Vector &amp;</type>
          <declname>tau</declname>
        </param>
        <param>
          <type>const GSL::Vector &amp;</type>
          <declname>kp</declname>
        </param>
        <param>
          <type><ref refid="classBloch__sum_1_1Container" kindref="compound">Bloch_sum::Container</ref> &amp;</type>
          <declname>Ds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/structure_const.h" line="71" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classBloch__summed__structure__constant_1adb673f2b4dba346f0044577f65fe22a2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GSL::Complex</type>
        <definition>GSL::Complex Bloch_summed_structure_constant::calc_dot</definition>
        <argsstring>(const Crystal_t&lt; 3, Atom &gt; &amp;c, const lm &amp;lint, const lm &amp;lp, const lm &amp;l, const double kappa, const GSL::Vector &amp;tau, const GSL::Vector &amp;kp) const</argsstring>
        <name>calc_dot</name>
        <param>
          <type>const <ref refid="classCrystal__t" kindref="compound">Crystal_t</ref>&lt; 3, <ref refid="classAtom" kindref="compound">Atom</ref> &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="structlm" kindref="compound">lm</ref> &amp;</type>
          <declname>lint</declname>
        </param>
        <param>
          <type>const <ref refid="structlm" kindref="compound">lm</ref> &amp;</type>
          <declname>lp</declname>
        </param>
        <param>
          <type>const <ref refid="structlm" kindref="compound">lm</ref> &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>kappa</declname>
        </param>
        <param>
          <type>const GSL::Vector &amp;</type>
          <declname>tau</declname>
        </param>
        <param>
          <type>const GSL::Vector &amp;</type>
          <declname>kp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/structure_const.h" line="72" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classBloch__summed__structure__constant_1a1420851273e64d32646780271ba99bc3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>GSL::Complex</type>
        <definition>GSL::Complex Bloch_summed_structure_constant::dot</definition>
        <argsstring>(const Crystal_t&lt; 3, Atom &gt; &amp;c, const lm &amp;lint, const lm &amp;lp, const lm &amp;l, const double kappa, const GSL::Vector &amp;tau, const GSL::Vector &amp;kp, Bloch_sum::Container &amp;Ds) const</argsstring>
        <name>dot</name>
        <param>
          <type>const <ref refid="classCrystal__t" kindref="compound">Crystal_t</ref>&lt; 3, <ref refid="classAtom" kindref="compound">Atom</ref> &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="structlm" kindref="compound">lm</ref> &amp;</type>
          <declname>lint</declname>
        </param>
        <param>
          <type>const <ref refid="structlm" kindref="compound">lm</ref> &amp;</type>
          <declname>lp</declname>
        </param>
        <param>
          <type>const <ref refid="structlm" kindref="compound">lm</ref> &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>kappa</declname>
        </param>
        <param>
          <type>const GSL::Vector &amp;</type>
          <declname>tau</declname>
        </param>
        <param>
          <type>const GSL::Vector &amp;</type>
          <declname>kp</declname>
        </param>
        <param>
          <type><ref refid="classBloch__sum_1_1Container" kindref="compound">Bloch_sum::Container</ref> &amp;</type>
          <declname>Ds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/structure_const.h" line="73" column="14" bodyfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/structure_const.h" bodystart="73" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classBloch__summed__structure__constant_1a4d9e6e7e7c7ada208968072096fa6bdb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>GSL::Complex</type>
        <definition>GSL::Complex Bloch_summed_structure_constant::dot</definition>
        <argsstring>(const Crystal_t&lt; 3, Atom &gt; &amp;c, const lm &amp;lint, const lm &amp;lp, const lm &amp;l, const double kappa, const GSL::Vector &amp;tau, const GSL::Vector &amp;kp) const</argsstring>
        <name>dot</name>
        <param>
          <type>const <ref refid="classCrystal__t" kindref="compound">Crystal_t</ref>&lt; 3, <ref refid="classAtom" kindref="compound">Atom</ref> &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="structlm" kindref="compound">lm</ref> &amp;</type>
          <declname>lint</declname>
        </param>
        <param>
          <type>const <ref refid="structlm" kindref="compound">lm</ref> &amp;</type>
          <declname>lp</declname>
        </param>
        <param>
          <type>const <ref refid="structlm" kindref="compound">lm</ref> &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>kappa</declname>
        </param>
        <param>
          <type>const GSL::Vector &amp;</type>
          <declname>tau</declname>
        </param>
        <param>
          <type>const GSL::Vector &amp;</type>
          <declname>kp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/structure_const.h" line="77" column="14" bodyfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/structure_const.h" bodystart="77" bodyend="80"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/structure_const.h" line="56" column="1" bodyfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/structure_const.h" bodystart="56" bodyend="104"/>
    <listofallmembers>
      <member refid="classBloch__summed__structure__constant_1a4e1955e96fbdf0c0139216c8e328c4df" prot="public" virt="non-virtual"><scope>Bloch_summed_structure_constant</scope><name>Bloch_summed_structure_constant</name></member>
      <member refid="classBloch__summed__structure__constant_1af6f5054a3bde1008a6dd2603043a21fd" prot="public" virt="non-virtual"><scope>Bloch_summed_structure_constant</scope><name>calc</name></member>
      <member refid="classBloch__summed__structure__constant_1ace169b4295b159a56e29dd1b5ae138f2" prot="public" virt="non-virtual"><scope>Bloch_summed_structure_constant</scope><name>calc</name></member>
      <member refid="classBloch__summed__structure__constant_1a77d87ffe9d48e66c9978b4f6a792b82f" prot="public" virt="non-virtual"><scope>Bloch_summed_structure_constant</scope><name>calc_dot</name></member>
      <member refid="classBloch__summed__structure__constant_1adb673f2b4dba346f0044577f65fe22a2" prot="public" virt="non-virtual"><scope>Bloch_summed_structure_constant</scope><name>calc_dot</name></member>
      <member refid="classBloch__summed__structure__constant_1a1420851273e64d32646780271ba99bc3" prot="public" virt="non-virtual"><scope>Bloch_summed_structure_constant</scope><name>dot</name></member>
      <member refid="classBloch__summed__structure__constant_1a4d9e6e7e7c7ada208968072096fa6bdb" prot="public" virt="non-virtual"><scope>Bloch_summed_structure_constant</scope><name>dot</name></member>
      <member refid="classBloch__summed__structure__constant_1aa468a17fca392c1e40e3b6262fc902ba" prot="private" virt="non-virtual"><scope>Bloch_summed_structure_constant</scope><name>Key</name></member>
      <member refid="classBloch__summed__structure__constant_1a710a39fa2ed7baa7b1b7a202265255cb" prot="public" virt="non-virtual"><scope>Bloch_summed_structure_constant</scope><name>operator()</name></member>
      <member refid="classBloch__summed__structure__constant_1a4d0b44f5d6a6f59f4d24727682f1582e" prot="public" virt="non-virtual"><scope>Bloch_summed_structure_constant</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
