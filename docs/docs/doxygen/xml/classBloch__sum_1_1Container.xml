<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="classBloch__sum_1_1Container" kind="class" language="C++" prot="public">
    <compoundname>Bloch_sum::Container</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBloch__sum_1_1Container_1aab432bd4e5976e19d4e8e5f6a6429158" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; Bloch_sum::Key, GSL::Complex &gt;</type>
        <definition>std::unordered_map&lt;Bloch_sum::Key, GSL::Complex&gt; Bloch_sum::Container::values_m</definition>
        <argsstring></argsstring>
        <name>values_m</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/bloch_sum.h" line="54" column="20" bodyfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/bloch_sum.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBloch__sum_1_1Container_1a67c75f0cceb0afb35a1fb03779b0e485" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; Bloch_sum::Key, GSL::Complex &gt;</type>
        <definition>std::unordered_map&lt;Bloch_sum::Key, GSL::Complex&gt; Bloch_sum::Container::dot_values_m</definition>
        <argsstring></argsstring>
        <name>dot_values_m</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/bloch_sum.h" line="55" column="24" bodyfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/bloch_sum.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBloch__sum_1_1Container_1ae431420af9423b0cc88ecba224c16a89" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Bloch_sum::Container::add</definition>
        <argsstring>(const lm l, const double kappa, const Crystal_t&lt; 3, Atom &gt; &amp;c, const GSL::Vector &amp;tau, const GSL::Vector &amp;kp)</argsstring>
        <name>add</name>
        <param>
          <type>const <ref refid="structlm" kindref="compound">lm</ref></type>
          <declname>l</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>kappa</declname>
        </param>
        <param>
          <type>const <ref refid="classCrystal__t" kindref="compound">Crystal_t</ref>&lt; 3, <ref refid="classAtom" kindref="compound">Atom</ref> &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const GSL::Vector &amp;</type>
          <declname>tau</declname>
        </param>
        <param>
          <type>const GSL::Vector &amp;</type>
          <declname>kp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/bloch_sum.h" line="56" column="6"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBloch__sum_1_1Container_1acad64cdddf02ee7711acd9dc254b351b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Bloch_sum::Container::Container</definition>
        <argsstring>()</argsstring>
        <name>Container</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/bloch_sum.h" line="58" column="1" bodyfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/bloch_sum.h" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classBloch__sum_1_1Container_1a275d48a47f2476c5b8474b1e2ea7cc98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GSL::Complex</type>
        <definition>GSL::Complex Bloch_sum::Container::get</definition>
        <argsstring>(const lm l, const double kappa, const Crystal_t&lt; 3, Atom &gt; &amp;c, const GSL::Vector &amp;tau, const GSL::Vector &amp;kp)</argsstring>
        <name>get</name>
        <param>
          <type>const <ref refid="structlm" kindref="compound">lm</ref></type>
          <declname>l</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>kappa</declname>
        </param>
        <param>
          <type>const <ref refid="classCrystal__t" kindref="compound">Crystal_t</ref>&lt; 3, <ref refid="classAtom" kindref="compound">Atom</ref> &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const GSL::Vector &amp;</type>
          <declname>tau</declname>
        </param>
        <param>
          <type>const GSL::Vector &amp;</type>
          <declname>kp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/bloch_sum.h" line="59" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBloch__sum_1_1Container_1ab598f3a40fb5bfd9a1ce6809eddfeb89" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>GSL::Complex</type>
        <definition>GSL::Complex Bloch_sum::Container::operator()</definition>
        <argsstring>(const lm l, const double kappa, const Crystal_t&lt; 3, Atom &gt; &amp;c, const GSL::Vector &amp;tau, const GSL::Vector &amp;kp)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structlm" kindref="compound">lm</ref></type>
          <declname>l</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>kappa</declname>
        </param>
        <param>
          <type>const <ref refid="classCrystal__t" kindref="compound">Crystal_t</ref>&lt; 3, <ref refid="classAtom" kindref="compound">Atom</ref> &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const GSL::Vector &amp;</type>
          <declname>tau</declname>
        </param>
        <param>
          <type>const GSL::Vector &amp;</type>
          <declname>kp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/bloch_sum.h" line="60" column="18" bodyfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/bloch_sum.h" bodystart="60" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classBloch__sum_1_1Container_1abaa876f529a705c6e66fbd4f63a0a6a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GSL::Complex</type>
        <definition>GSL::Complex Bloch_sum::Container::get_dot</definition>
        <argsstring>(const lm l, const double kappa, const Crystal_t&lt; 3, Atom &gt; &amp;c, const GSL::Vector &amp;tau, const GSL::Vector &amp;kp)</argsstring>
        <name>get_dot</name>
        <param>
          <type>const <ref refid="structlm" kindref="compound">lm</ref></type>
          <declname>l</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>kappa</declname>
        </param>
        <param>
          <type>const <ref refid="classCrystal__t" kindref="compound">Crystal_t</ref>&lt; 3, <ref refid="classAtom" kindref="compound">Atom</ref> &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const GSL::Vector &amp;</type>
          <declname>tau</declname>
        </param>
        <param>
          <type>const GSL::Vector &amp;</type>
          <declname>kp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/bloch_sum.h" line="65" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBloch__sum_1_1Container_1a634b749f525a62571900824bf6a25f08" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>GSL::Complex</type>
        <definition>GSL::Complex Bloch_sum::Container::dot</definition>
        <argsstring>(const lm l, const double kappa, const Crystal_t&lt; 3, Atom &gt; &amp;c, const GSL::Vector &amp;tau, const GSL::Vector &amp;kp)</argsstring>
        <name>dot</name>
        <param>
          <type>const <ref refid="structlm" kindref="compound">lm</ref></type>
          <declname>l</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>kappa</declname>
        </param>
        <param>
          <type>const <ref refid="classCrystal__t" kindref="compound">Crystal_t</ref>&lt; 3, <ref refid="classAtom" kindref="compound">Atom</ref> &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const GSL::Vector &amp;</type>
          <declname>tau</declname>
        </param>
        <param>
          <type>const GSL::Vector &amp;</type>
          <declname>kp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/bloch_sum.h" line="66" column="18" bodyfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/bloch_sum.h" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classBloch__sum_1_1Container_1a9c0e74474658f5585b50b045d7e32702" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Bloch_sum::Container::recalculate_all</definition>
        <argsstring>(const Crystal_t&lt; 3, Atom &gt; &amp;c)</argsstring>
        <name>recalculate_all</name>
        <param>
          <type>const <ref refid="classCrystal__t" kindref="compound">Crystal_t</ref>&lt; 3, <ref refid="classAtom" kindref="compound">Atom</ref> &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/bloch_sum.h" line="71" column="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/bloch_sum.h" line="52" column="1" bodyfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/bloch_sum.h" bodystart="52" bodyend="72"/>
    <listofallmembers>
      <member refid="classBloch__sum_1_1Container_1ae431420af9423b0cc88ecba224c16a89" prot="private" virt="non-virtual"><scope>Bloch_sum::Container</scope><name>add</name></member>
      <member refid="classBloch__sum_1_1Container_1acad64cdddf02ee7711acd9dc254b351b" prot="public" virt="non-virtual"><scope>Bloch_sum::Container</scope><name>Container</name></member>
      <member refid="classBloch__sum_1_1Container_1a634b749f525a62571900824bf6a25f08" prot="public" virt="non-virtual"><scope>Bloch_sum::Container</scope><name>dot</name></member>
      <member refid="classBloch__sum_1_1Container_1a67c75f0cceb0afb35a1fb03779b0e485" prot="private" virt="non-virtual"><scope>Bloch_sum::Container</scope><name>dot_values_m</name></member>
      <member refid="classBloch__sum_1_1Container_1a275d48a47f2476c5b8474b1e2ea7cc98" prot="public" virt="non-virtual"><scope>Bloch_sum::Container</scope><name>get</name></member>
      <member refid="classBloch__sum_1_1Container_1abaa876f529a705c6e66fbd4f63a0a6a4" prot="public" virt="non-virtual"><scope>Bloch_sum::Container</scope><name>get_dot</name></member>
      <member refid="classBloch__sum_1_1Container_1ab598f3a40fb5bfd9a1ce6809eddfeb89" prot="public" virt="non-virtual"><scope>Bloch_sum::Container</scope><name>operator()</name></member>
      <member refid="classBloch__sum_1_1Container_1a9c0e74474658f5585b50b045d7e32702" prot="public" virt="non-virtual"><scope>Bloch_sum::Container</scope><name>recalculate_all</name></member>
      <member refid="classBloch__sum_1_1Container_1aab432bd4e5976e19d4e8e5f6a6429158" prot="private" virt="non-virtual"><scope>Bloch_sum::Container</scope><name>values_m</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
