<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="classAugmented__function" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>Augmented_function</compoundname>
    <derivedcompoundref refid="classAugmented__Bessel" prot="public" virt="non-virtual">Augmented_Bessel</derivedcompoundref>
    <derivedcompoundref refid="classAugmented__Hankel" prot="public" virt="non-virtual">Augmented_Hankel</derivedcompoundref>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classAugmented__function_1a87d9bedb5104d916f2d8e4520202ba44" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Augmented_function::En_m</definition>
        <argsstring></argsstring>
        <name>En_m</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" line="10" column="12" bodyfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classAugmented__function_1a68aa65cf592852db5d8aa591faed66a3" prot="public" static="no" mutable="no">
        <type><ref refid="structlm" kindref="compound">lm</ref></type>
        <definition>lm Augmented_function::l_m</definition>
        <argsstring></argsstring>
        <name>l_m</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" line="12" column="8" bodyfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAugmented__function_1a084ed4531435bf6c9404f74906bbd675" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Augmented_function::kappa_m</definition>
        <argsstring></argsstring>
        <name>kappa_m</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" line="13" column="12" bodyfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAugmented__function_1ac85d56583de04209d492bb278be988e7" prot="public" static="no" mutable="no">
        <type>spin</type>
        <definition>spin Augmented_function::s_m</definition>
        <argsstring></argsstring>
        <name>s_m</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" line="14" column="10" bodyfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAugmented__function_1aa065dcae53178ad8d13373d1a232a3cb" prot="public" static="no" mutable="no">
        <type><ref refid="classLogarithmic__mesh" kindref="compound">Logarithmic_mesh</ref></type>
        <definition>Logarithmic_mesh Augmented_function::mesh_m</definition>
        <argsstring></argsstring>
        <name>mesh_m</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" line="15" column="22" bodyfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classAugmented__function_1a1558390db0687d110c4ef3779dff4a70" prot="public" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; Augmented_function::val_m</definition>
        <argsstring></argsstring>
        <name>val_m</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" line="16" column="17" bodyfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classAugmented__function_1af09e1c0c2c10638bcf058b13e5683daf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Augmented_function::operator()</definition>
        <argsstring>(const GSL::Vector &amp;r) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const GSL::Vector &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" line="18" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classAugmented__function_1ae3c0d5144179738e9e6c97a6676b9e1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Augmented_function::Augmented_function</definition>
        <argsstring>()=default</argsstring>
        <name>Augmented_function</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" line="20" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classAugmented__function_1a57e7a245188fa18976933132ba1b5ba2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Augmented_function::Augmented_function</definition>
        <argsstring>(const Augmented_function &amp;)=default</argsstring>
        <name>Augmented_function</name>
        <param>
          <type>const <ref refid="classAugmented__function" kindref="compound">Augmented_function</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" line="21" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classAugmented__function_1abdd342c840ed9a0ae2575567d4ace3a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Augmented_function::Augmented_function</definition>
        <argsstring>(Augmented_function &amp;&amp;)=default</argsstring>
        <name>Augmented_function</name>
        <param>
          <type><ref refid="classAugmented__function" kindref="compound">Augmented_function</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" line="22" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classAugmented__function_1a05554ea4222a99cbd5edda6b09babcf9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual Augmented_function::~Augmented_function</definition>
        <argsstring>()</argsstring>
        <name>~Augmented_function</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" line="23" column="13" bodyfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" bodystart="23" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classAugmented__function_1a3e03404aa146bfec18293143dfa1762e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Augmented_function::Augmented_function</definition>
        <argsstring>(const lm l, const double kappa, const spin s, const Logarithmic_mesh &amp;mesh)</argsstring>
        <name>Augmented_function</name>
        <param>
          <type>const <ref refid="structlm" kindref="compound">lm</ref></type>
          <declname>l</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>kappa</declname>
        </param>
        <param>
          <type>const spin</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classLogarithmic__mesh" kindref="compound">Logarithmic_mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" line="25" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classAugmented__function_1a954583b48744cd2eae4caf3520719c5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classAugmented__function" kindref="compound">Augmented_function</ref> &amp;</type>
        <definition>Augmented_function&amp; Augmented_function::operator=</definition>
        <argsstring>(const Augmented_function &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classAugmented__function" kindref="compound">Augmented_function</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" line="28" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classAugmented__function_1a09db8b7894174cd6c67b3ad7d3bb7edc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classAugmented__function" kindref="compound">Augmented_function</ref> &amp;</type>
        <definition>Augmented_function&amp; Augmented_function::operator=</definition>
        <argsstring>(Augmented_function &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classAugmented__function" kindref="compound">Augmented_function</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" line="29" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classAugmented__function_1acfab355994fb7d16c742535fe8972922" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Augmented_function::update</definition>
        <argsstring>(std::vector&lt; double &gt; &amp;v, const double en, const bool core)=0</argsstring>
        <name>update</name>
        <reimplementedby refid="classAugmented__Hankel_1a051db9bea46932612e984df7eddbe295">update</reimplementedby>
        <reimplementedby refid="classAugmented__Bessel_1abbf00aa990a7643efcdcb0987217cb96">update</reimplementedby>
        <param>
          <type>std::vector&lt; double &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>en</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>core</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" line="34" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classAugmented__function_1a8a340605b6020c71a6fef5a0b8f1251b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlm" kindref="compound">lm</ref></type>
        <definition>lm Augmented_function::l</definition>
        <argsstring>() const</argsstring>
        <name>l</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" line="37" column="8" bodyfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classAugmented__function_1a5569c661561a7a35bfc59148431726f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlm" kindref="compound">lm</ref> &amp;</type>
        <definition>lm&amp; Augmented_function::l</definition>
        <argsstring>()</argsstring>
        <name>l</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" line="38" column="8" bodyfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" bodystart="38" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classAugmented__function_1af7f62a70d0293f36ad033b2c3a104a0b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Augmented_function::kappa</definition>
        <argsstring>() const</argsstring>
        <name>kappa</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" line="40" column="12" bodyfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" bodystart="40" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classAugmented__function_1a4a3fbc697571fe19a55fb8c8e9409364" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double &amp;</type>
        <definition>double&amp; Augmented_function::kappa</definition>
        <argsstring>()</argsstring>
        <name>kappa</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" line="41" column="12" bodyfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classAugmented__function_1abb7a989dc1a09060bbd9b4bd147df6fe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>spin</type>
        <definition>spin Augmented_function::s</definition>
        <argsstring>() const</argsstring>
        <name>s</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" line="43" column="10" bodyfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classAugmented__function_1a9fc4ade6a5f4e4a81b8a8577817821f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>spin &amp;</type>
        <definition>spin&amp; Augmented_function::s</definition>
        <argsstring>()</argsstring>
        <name>s</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" line="44" column="10" bodyfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" bodystart="44" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classAugmented__function_1a52cfb9e9ff3023d4e24a87abfe8433b4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classLogarithmic__mesh" kindref="compound">Logarithmic_mesh</ref></type>
        <definition>Logarithmic_mesh Augmented_function::mesh</definition>
        <argsstring>() const</argsstring>
        <name>mesh</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" line="46" column="22" bodyfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classAugmented__function_1a220205d71230400be2aa804fddb57cfe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classLogarithmic__mesh" kindref="compound">Logarithmic_mesh</ref> &amp;</type>
        <definition>Logarithmic_mesh&amp; Augmented_function::mesh</definition>
        <argsstring>()</argsstring>
        <name>mesh</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" line="47" column="22" bodyfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classAugmented__function_1a27e866d6841096928ea6bba2ebbba613" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; Augmented_function::val</definition>
        <argsstring>() const</argsstring>
        <name>val</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" line="49" column="17" bodyfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" bodystart="49" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classAugmented__function_1af6b1d2919a83f30567958f99ff528922" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; double &gt; &amp;</type>
        <definition>std::vector&lt;double&gt;&amp; Augmented_function::val</definition>
        <argsstring>()</argsstring>
        <name>val</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" line="50" column="17" bodyfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classAugmented__function_1a164b2a3ab60e4c89a4ca0b3ac2a011c1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Augmented_function::En</definition>
        <argsstring>() const</argsstring>
        <name>En</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" line="52" column="12" bodyfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classAugmented__function_1a655bc4251b7417aa2f82f69b9a839e57" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double &amp;</type>
        <definition>double&amp; Augmented_function::En</definition>
        <argsstring>()</argsstring>
        <name>En</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" line="53" column="12" bodyfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" bodystart="53" bodyend="53"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classAugmented__function_1a2ce33222aea67403b16a734072c8a1e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const Augmented_function &amp;a, const Augmented_function &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classAugmented__function" kindref="compound">Augmented_function</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classAugmented__function" kindref="compound">Augmented_function</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" line="31" column="17"/>
      </memberdef>
      <memberdef kind="friend" id="classAugmented__function_1a7e26f4f6e76afdedf16a6b579fb5913e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const Augmented_function &amp;a, const Augmented_function &amp;b)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classAugmented__function" kindref="compound">Augmented_function</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classAugmented__function" kindref="compound">Augmented_function</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" line="32" column="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Augmented_Bessel</label>
        <link refid="classAugmented__Bessel"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Augmented_function</label>
        <link refid="classAugmented__function"/>
      </node>
      <node id="3">
        <label>Augmented_Hankel</label>
        <link refid="classAugmented__Hankel"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>Logarithmic_mesh</label>
        <link refid="classLogarithmic__mesh"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Mesh</label>
        <link refid="classMesh"/>
        <childnode refid="5" relation="usage">
          <edgelabel>x2_p</edgelabel>
          <edgelabel>x_p</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>std::vector&lt; double &gt;</label>
      </node>
      <node id="2">
        <label>lm</label>
        <link refid="structlm"/>
      </node>
      <node id="1">
        <label>Augmented_function</label>
        <link refid="classAugmented__function"/>
        <childnode refid="2" relation="usage">
          <edgelabel>l_m</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>mesh_m</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>val_m</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" line="8" column="1" bodyfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/augmented_fun.h" bodystart="8" bodyend="54"/>
    <listofallmembers>
      <member refid="classAugmented__function_1ae3c0d5144179738e9e6c97a6676b9e1a" prot="public" virt="non-virtual"><scope>Augmented_function</scope><name>Augmented_function</name></member>
      <member refid="classAugmented__function_1a57e7a245188fa18976933132ba1b5ba2" prot="public" virt="non-virtual"><scope>Augmented_function</scope><name>Augmented_function</name></member>
      <member refid="classAugmented__function_1abdd342c840ed9a0ae2575567d4ace3a6" prot="public" virt="non-virtual"><scope>Augmented_function</scope><name>Augmented_function</name></member>
      <member refid="classAugmented__function_1a3e03404aa146bfec18293143dfa1762e" prot="public" virt="non-virtual"><scope>Augmented_function</scope><name>Augmented_function</name></member>
      <member refid="classAugmented__function_1a164b2a3ab60e4c89a4ca0b3ac2a011c1" prot="public" virt="non-virtual"><scope>Augmented_function</scope><name>En</name></member>
      <member refid="classAugmented__function_1a655bc4251b7417aa2f82f69b9a839e57" prot="public" virt="non-virtual"><scope>Augmented_function</scope><name>En</name></member>
      <member refid="classAugmented__function_1a87d9bedb5104d916f2d8e4520202ba44" prot="protected" virt="non-virtual"><scope>Augmented_function</scope><name>En_m</name></member>
      <member refid="classAugmented__function_1af7f62a70d0293f36ad033b2c3a104a0b" prot="public" virt="non-virtual"><scope>Augmented_function</scope><name>kappa</name></member>
      <member refid="classAugmented__function_1a4a3fbc697571fe19a55fb8c8e9409364" prot="public" virt="non-virtual"><scope>Augmented_function</scope><name>kappa</name></member>
      <member refid="classAugmented__function_1a084ed4531435bf6c9404f74906bbd675" prot="public" virt="non-virtual"><scope>Augmented_function</scope><name>kappa_m</name></member>
      <member refid="classAugmented__function_1a8a340605b6020c71a6fef5a0b8f1251b" prot="public" virt="non-virtual"><scope>Augmented_function</scope><name>l</name></member>
      <member refid="classAugmented__function_1a5569c661561a7a35bfc59148431726f2" prot="public" virt="non-virtual"><scope>Augmented_function</scope><name>l</name></member>
      <member refid="classAugmented__function_1a68aa65cf592852db5d8aa591faed66a3" prot="public" virt="non-virtual"><scope>Augmented_function</scope><name>l_m</name></member>
      <member refid="classAugmented__function_1a52cfb9e9ff3023d4e24a87abfe8433b4" prot="public" virt="non-virtual"><scope>Augmented_function</scope><name>mesh</name></member>
      <member refid="classAugmented__function_1a220205d71230400be2aa804fddb57cfe" prot="public" virt="non-virtual"><scope>Augmented_function</scope><name>mesh</name></member>
      <member refid="classAugmented__function_1aa065dcae53178ad8d13373d1a232a3cb" prot="public" virt="non-virtual"><scope>Augmented_function</scope><name>mesh_m</name></member>
      <member refid="classAugmented__function_1a7e26f4f6e76afdedf16a6b579fb5913e" prot="public" virt="non-virtual"><scope>Augmented_function</scope><name>operator!=</name></member>
      <member refid="classAugmented__function_1af09e1c0c2c10638bcf058b13e5683daf" prot="public" virt="non-virtual"><scope>Augmented_function</scope><name>operator()</name></member>
      <member refid="classAugmented__function_1a954583b48744cd2eae4caf3520719c5a" prot="public" virt="non-virtual"><scope>Augmented_function</scope><name>operator=</name></member>
      <member refid="classAugmented__function_1a09db8b7894174cd6c67b3ad7d3bb7edc" prot="public" virt="non-virtual"><scope>Augmented_function</scope><name>operator=</name></member>
      <member refid="classAugmented__function_1a2ce33222aea67403b16a734072c8a1e0" prot="public" virt="non-virtual"><scope>Augmented_function</scope><name>operator==</name></member>
      <member refid="classAugmented__function_1abb7a989dc1a09060bbd9b4bd147df6fe" prot="public" virt="non-virtual"><scope>Augmented_function</scope><name>s</name></member>
      <member refid="classAugmented__function_1a9fc4ade6a5f4e4a81b8a8577817821f9" prot="public" virt="non-virtual"><scope>Augmented_function</scope><name>s</name></member>
      <member refid="classAugmented__function_1ac85d56583de04209d492bb278be988e7" prot="public" virt="non-virtual"><scope>Augmented_function</scope><name>s_m</name></member>
      <member refid="classAugmented__function_1acfab355994fb7d16c742535fe8972922" prot="public" virt="pure-virtual"><scope>Augmented_function</scope><name>update</name></member>
      <member refid="classAugmented__function_1a27e866d6841096928ea6bba2ebbba613" prot="public" virt="non-virtual"><scope>Augmented_function</scope><name>val</name></member>
      <member refid="classAugmented__function_1af6b1d2919a83f30567958f99ff528922" prot="public" virt="non-virtual"><scope>Augmented_function</scope><name>val</name></member>
      <member refid="classAugmented__function_1a1558390db0687d110c4ef3779dff4a70" prot="public" virt="non-virtual"><scope>Augmented_function</scope><name>val_m</name></member>
      <member refid="classAugmented__function_1a05554ea4222a99cbd5edda6b09babcf9" prot="public" virt="virtual"><scope>Augmented_function</scope><name>~Augmented_function</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
