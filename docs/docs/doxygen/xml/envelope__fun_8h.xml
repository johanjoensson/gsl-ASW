<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="envelope__fun_8h" kind="file" language="C++">
    <compoundname>envelope_fun.h</compoundname>
    <includes local="yes">GSLpp/vector.h</includes>
    <includes local="yes">GSLpp/special_functions.h</includes>
    <includes refid="utils_8h" local="yes">utils.h</includes>
    <includes refid="atom_8h" local="yes">atom.h</includes>
    <includes refid="site_8h" local="yes">site.h</includes>
    <incdepgraph>
      <node id="5">
        <label>functional</label>
      </node>
      <node id="3">
        <label>GSLpp/special_functions.h</label>
      </node>
      <node id="4">
        <label>utils.h</label>
        <link refid="utils_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>site.h</label>
        <link refid="site_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>GSLpp/vector.h</label>
      </node>
      <node id="1">
        <label>envelope_fun.h</label>
        <link refid="envelope__fun_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>log_mesh.h</label>
        <link refid="log__mesh_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>atom.h</label>
        <link refid="atom_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>vector</label>
      </node>
      <node id="6">
        <label>iostream</label>
      </node>
      <node id="10">
        <label>cstddef</label>
      </node>
      <node id="8">
        <label>gsl/gsl_math.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="classEnvelope__function" prot="public">Envelope_function</innerclass>
    <innerclass refid="classEnvelope__Hankel" prot="public">Envelope_Hankel</innerclass>
    <innerclass refid="classEnvelope__Bessel" prot="public">Envelope_Bessel</innerclass>
    <innerclass refid="classEnvelope__Neumann" prot="public">Envelope_Neumann</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="envelope__fun_8h_1aa27d3ca7052a277efdd59a4c311ec7fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double off_atomic_integral</definition>
        <argsstring>(const Envelope_Hankel &amp;H1, const Envelope_Hankel &amp;H2, const double rs)</argsstring>
        <name>off_atomic_integral</name>
        <param>
          <type>const <ref refid="classEnvelope__Hankel" kindref="compound">Envelope_Hankel</ref> &amp;</type>
          <declname>H1</declname>
        </param>
        <param>
          <type>const <ref refid="classEnvelope__Hankel" kindref="compound">Envelope_Hankel</ref> &amp;</type>
          <declname>H2</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>rs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Hankel functions * </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/envelope_fun.h" line="86" column="8" declfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/envelope_fun.h" declline="86" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="envelope__fun_8h_1a60510a52b89da071bda3a777586b0a41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double off_atomic_integral</definition>
        <argsstring>(const Envelope_Hankel &amp;H1, const Envelope_Bessel &amp;J2, const double rs)</argsstring>
        <name>off_atomic_integral</name>
        <param>
          <type>const <ref refid="classEnvelope__Hankel" kindref="compound">Envelope_Hankel</ref> &amp;</type>
          <declname>H1</declname>
        </param>
        <param>
          <type>const <ref refid="classEnvelope__Bessel" kindref="compound">Envelope_Bessel</ref> &amp;</type>
          <declname>J2</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>rs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/envelope_fun.h" line="87" column="8" declfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/envelope_fun.h" declline="87" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="envelope__fun_8h_1ae3e190b6f367e1f0fd40f9b4318f422e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double atomic_integral</definition>
        <argsstring>(const Envelope_Hankel &amp;H1, const Envelope_Bessel &amp;J2, const double rs)</argsstring>
        <name>atomic_integral</name>
        <param>
          <type>const <ref refid="classEnvelope__Hankel" kindref="compound">Envelope_Hankel</ref> &amp;</type>
          <declname>H1</declname>
        </param>
        <param>
          <type>const <ref refid="classEnvelope__Bessel" kindref="compound">Envelope_Bessel</ref> &amp;</type>
          <declname>J2</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>rs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/envelope_fun.h" line="89" column="8" declfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/envelope_fun.h" declline="89" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="envelope__fun_8h_1a3cb75a0e76542191b74b38943bcbbf2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double atomic_integral</definition>
        <argsstring>(const Envelope_Bessel &amp;J1, const Envelope_Hankel &amp;H2, const double rs)</argsstring>
        <name>atomic_integral</name>
        <param>
          <type>const <ref refid="classEnvelope__Bessel" kindref="compound">Envelope_Bessel</ref> &amp;</type>
          <declname>J1</declname>
        </param>
        <param>
          <type>const <ref refid="classEnvelope__Hankel" kindref="compound">Envelope_Hankel</ref> &amp;</type>
          <declname>H2</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>rs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/envelope_fun.h" line="90" column="8" declfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/envelope_fun.h" declline="90" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="envelope__fun_8h_1a53a413e3785007735e0fd12cbf663f46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double atomic_integral</definition>
        <argsstring>(const Envelope_Neumann &amp;N1, const Envelope_Neumann &amp;N2, const double rs)</argsstring>
        <name>atomic_integral</name>
        <param>
          <type>const <ref refid="classEnvelope__Neumann" kindref="compound">Envelope_Neumann</ref> &amp;</type>
          <declname>N1</declname>
        </param>
        <param>
          <type>const <ref refid="classEnvelope__Neumann" kindref="compound">Envelope_Neumann</ref> &amp;</type>
          <declname>N2</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>rs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Neumann functions * </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/envelope_fun.h" line="96" column="8" declfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/envelope_fun.h" declline="96" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="envelope__fun_8h_1a0f301b1ebc0b6f42018adc0b4fb2f5a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double atomic_integral</definition>
        <argsstring>(const Envelope_Neumann &amp;N1, const Envelope_Bessel &amp;J2, const double rs)</argsstring>
        <name>atomic_integral</name>
        <param>
          <type>const <ref refid="classEnvelope__Neumann" kindref="compound">Envelope_Neumann</ref> &amp;</type>
          <declname>N1</declname>
        </param>
        <param>
          <type>const <ref refid="classEnvelope__Bessel" kindref="compound">Envelope_Bessel</ref> &amp;</type>
          <declname>J2</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>rs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/envelope_fun.h" line="98" column="8" declfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/envelope_fun.h" declline="98" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="envelope__fun_8h_1ab81e8d0420e95e7b732d6cf6eb2508ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double atomic_integral</definition>
        <argsstring>(const Envelope_Bessel &amp;J1, const Envelope_Neumann &amp;N2, const double rs)</argsstring>
        <name>atomic_integral</name>
        <param>
          <type>const <ref refid="classEnvelope__Bessel" kindref="compound">Envelope_Bessel</ref> &amp;</type>
          <declname>J1</declname>
        </param>
        <param>
          <type>const <ref refid="classEnvelope__Neumann" kindref="compound">Envelope_Neumann</ref> &amp;</type>
          <declname>N2</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>rs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/envelope_fun.h" line="99" column="8" declfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/envelope_fun.h" declline="99" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="envelope__fun_8h_1a7edfba8f6f921b0b9523e7aaed9ee6ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double atomic_integral</definition>
        <argsstring>(const Envelope_Bessel &amp;J1, const Envelope_Bessel &amp;J2, const double rs)</argsstring>
        <name>atomic_integral</name>
        <param>
          <type>const <ref refid="classEnvelope__Bessel" kindref="compound">Envelope_Bessel</ref> &amp;</type>
          <declname>J1</declname>
        </param>
        <param>
          <type>const <ref refid="classEnvelope__Bessel" kindref="compound">Envelope_Bessel</ref> &amp;</type>
          <declname>J2</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>rs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/envelope_fun.h" line="102" column="8" declfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/envelope_fun.h" declline="102" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="envelope__fun_8h_1a6899397106f311dda87bd5cb7a67426b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double wronskian</definition>
        <argsstring>(const Envelope_Hankel &amp;f, const Envelope_Hankel &amp;g, const double rs)</argsstring>
        <name>wronskian</name>
        <param>
          <type>const <ref refid="classEnvelope__Hankel" kindref="compound">Envelope_Hankel</ref> &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const <ref refid="classEnvelope__Hankel" kindref="compound">Envelope_Hankel</ref> &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>rs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Wronskkians of envelope functions (barred spherical functions) * </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/envelope_fun.h" line="107" column="8" declfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/envelope_fun.h" declline="107" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="envelope__fun_8h_1a64fd0d4ee98ec44c4a3adec458a09834" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double wronskian</definition>
        <argsstring>(const Envelope_Hankel &amp;f, const Envelope_Bessel &amp;g, const double rs)</argsstring>
        <name>wronskian</name>
        <param>
          <type>const <ref refid="classEnvelope__Hankel" kindref="compound">Envelope_Hankel</ref> &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const <ref refid="classEnvelope__Bessel" kindref="compound">Envelope_Bessel</ref> &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>rs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/envelope_fun.h" line="108" column="8" declfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/envelope_fun.h" declline="108" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="envelope__fun_8h_1a028b2f071f6dee8c8c66d57daaaa7125" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double wronskian</definition>
        <argsstring>(const Envelope_Bessel &amp;f, const Envelope_Bessel &amp;g, const double rs)</argsstring>
        <name>wronskian</name>
        <param>
          <type>const <ref refid="classEnvelope__Bessel" kindref="compound">Envelope_Bessel</ref> &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const <ref refid="classEnvelope__Bessel" kindref="compound">Envelope_Bessel</ref> &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>rs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/envelope_fun.h" line="109" column="8" declfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/envelope_fun.h" declline="109" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="envelope__fun_8h_1a1fea3a8bf94d61ef1a711ab2c96ba475" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double wronskian</definition>
        <argsstring>(const Envelope_Bessel &amp;f, const Envelope_Hankel &amp;g, const double rs)</argsstring>
        <name>wronskian</name>
        <param>
          <type>const <ref refid="classEnvelope__Bessel" kindref="compound">Envelope_Bessel</ref> &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const <ref refid="classEnvelope__Hankel" kindref="compound">Envelope_Hankel</ref> &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>rs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/envelope_fun.h" line="110" column="15" bodyfile="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/envelope_fun.h" bodystart="110" bodyend="111"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>ENVELOPE_FUN_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENVELOPE_FUN_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GSLpp/vector.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GSLpp/special_functions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;utils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;atom.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;site.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Class/Functor<sp/>for<sp/>representing<sp/>envelope<sp/>funcitons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="classEnvelope__function" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classEnvelope__function" kindref="compound">Envelope_function</ref>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlm" kindref="compound">lm</ref><sp/>l_m;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kappa_m;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEnvelope__function" kindref="compound">Envelope_function</ref>(<ref refid="structlm" kindref="compound">lm</ref><sp/>l_n,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kappa_n)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>:<sp/>l_m(l_n),<sp/>kappa_m(kappa_n)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEnvelope__function" kindref="compound">Envelope_function</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classEnvelope__function" kindref="compound">Envelope_function</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEnvelope__function" kindref="compound">Envelope_function</ref>(<ref refid="classEnvelope__function" kindref="compound">Envelope_function</ref>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEnvelope__function" kindref="compound">Envelope_function</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classEnvelope__function" kindref="compound">Envelope_function</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEnvelope__function" kindref="compound">Envelope_function</ref>&amp;<sp/>operator=(<ref refid="classEnvelope__function" kindref="compound">Envelope_function</ref>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classEnvelope__function" kindref="compound">Envelope_function</ref>(){};</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GSL::Vector<sp/>r);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>barred_fun(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="28"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.*x;}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kappa()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kappa_m;}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>kappa()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kappa_m;}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlm" kindref="compound">lm</ref><sp/>l()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>l_m;}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlm" kindref="compound">lm</ref>&amp;<sp/>l()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>l_m;}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>atomic_integral(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classEnvelope__function" kindref="compound">Envelope_function</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classEnvelope__function" kindref="compound">Envelope_function</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rs);</highlight></codeline>
<codeline lineno="37"><highlight class="normal">};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classEnvelope__Hankel" kindref="compound">Envelope_Hankel</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classEnvelope__Bessel" kindref="compound">Envelope_Bessel</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classEnvelope__Neumann" kindref="compound">Envelope_Neumann</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classEnvelope__Hankel" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classEnvelope__Hankel" kindref="compound">Envelope_Hankel</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classEnvelope__function" kindref="compound">Envelope_function</ref>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEnvelope__Hankel" kindref="compound">Envelope_Hankel</ref>(<ref refid="structlm" kindref="compound">lm</ref><sp/>l_n,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kappa_n)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classEnvelope__function" kindref="compound">Envelope_function</ref>(l_n,<sp/>kappa_n)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>{};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>barred_fun(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="classEnvelope__Hankel_1aa27d3ca7052a277efdd59a4c311ec7fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classEnvelope__Hankel_1aa27d3ca7052a277efdd59a4c311ec7fa" kindref="member">off_atomic_integral</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classEnvelope__Hankel" kindref="compound">Envelope_Hankel</ref>&amp;<sp/>H1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classEnvelope__Hankel" kindref="compound">Envelope_Hankel</ref>&amp;<sp/>H2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rs);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>atomic_integral(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classEnvelope__Hankel" kindref="compound">Envelope_Hankel</ref>&amp;<sp/>H1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classEnvelope__Bessel" kindref="compound">Envelope_Bessel</ref>&amp;<sp/>J2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rs);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classEnvelope__Hankel_1aa27d3ca7052a277efdd59a4c311ec7fa" kindref="member">off_atomic_integral</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classEnvelope__Hankel" kindref="compound">Envelope_Hankel</ref>&amp;<sp/>H1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classEnvelope__Bessel" kindref="compound">Envelope_Bessel</ref>&amp;<sp/>J2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rs);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="classEnvelope__Bessel" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classEnvelope__Bessel" kindref="compound">Envelope_Bessel</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classEnvelope__function" kindref="compound">Envelope_function</ref>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEnvelope__Bessel" kindref="compound">Envelope_Bessel</ref>(<ref refid="structlm" kindref="compound">lm</ref><sp/>l_n,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kappa_n)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classEnvelope__function" kindref="compound">Envelope_function</ref>(l_n,<sp/>kappa_n)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>{};</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>barred_fun(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>atomic_integral(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classEnvelope__Hankel" kindref="compound">Envelope_Hankel</ref>&amp;<sp/>H1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classEnvelope__Bessel" kindref="compound">Envelope_Bessel</ref>&amp;<sp/>J2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rs);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>atomic_integral(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classEnvelope__Bessel" kindref="compound">Envelope_Bessel</ref>&amp;<sp/>J1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classEnvelope__Bessel" kindref="compound">Envelope_Bessel</ref>&amp;<sp/>J2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rs);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>off_atomic_integral(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classEnvelope__Hankel" kindref="compound">Envelope_Hankel</ref>&amp;<sp/>H1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classEnvelope__Bessel" kindref="compound">Envelope_Bessel</ref>&amp;<sp/>J2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rs);</highlight></codeline>
<codeline lineno="67"><highlight class="normal">};</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classEnvelope__Neumann" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classEnvelope__Neumann" kindref="compound">Envelope_Neumann</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classEnvelope__function" kindref="compound">Envelope_function</ref>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Envelope_Neumann()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>:Envelope_function()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>{};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEnvelope__Neumann" kindref="compound">Envelope_Neumann</ref>(<ref refid="structlm" kindref="compound">lm</ref><sp/>l_n,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kappa_n)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classEnvelope__function" kindref="compound">Envelope_function</ref>(l_n,<sp/>kappa_n)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>{};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>barred_fun(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal">};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="comment">//<sp/>One<sp/>center<sp/>integral</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>off_atomic_integral(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classEnvelope__Hankel" kindref="compound">Envelope_Hankel</ref>&amp;<sp/>H1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classEnvelope__Hankel" kindref="compound">Envelope_Hankel</ref>&amp;<sp/>H2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rs);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>off_atomic_integral(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classEnvelope__Hankel" kindref="compound">Envelope_Hankel</ref>&amp;<sp/>H1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classEnvelope__Bessel" kindref="compound">Envelope_Bessel</ref>&amp;<sp/>J2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rs);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Two<sp/>center<sp/>integrals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>atomic_integral(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classEnvelope__Hankel" kindref="compound">Envelope_Hankel</ref>&amp;<sp/>H1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classEnvelope__Bessel" kindref="compound">Envelope_Bessel</ref>&amp;<sp/>J2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rs);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>atomic_integral(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classEnvelope__Bessel" kindref="compound">Envelope_Bessel</ref>&amp;<sp/>J1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classEnvelope__Hankel" kindref="compound">Envelope_Hankel</ref>&amp;<sp/>H2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rs);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="comment">//<sp/>One<sp/>center<sp/>integral</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>atomic_integral(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classEnvelope__Neumann" kindref="compound">Envelope_Neumann</ref>&amp;<sp/>N1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classEnvelope__Neumann" kindref="compound">Envelope_Neumann</ref>&amp;<sp/>N2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rs);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Two<sp/>center<sp/>integrals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>atomic_integral(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classEnvelope__Neumann" kindref="compound">Envelope_Neumann</ref>&amp;<sp/>N1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classEnvelope__Bessel" kindref="compound">Envelope_Bessel</ref>&amp;<sp/>J2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rs);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>atomic_integral(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classEnvelope__Bessel" kindref="compound">Envelope_Bessel</ref>&amp;<sp/>J1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classEnvelope__Neumann" kindref="compound">Envelope_Neumann</ref>&amp;<sp/>N2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rs);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Three<sp/>center<sp/>integral</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>atomic_integral(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classEnvelope__Bessel" kindref="compound">Envelope_Bessel</ref>&amp;<sp/>J1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classEnvelope__Bessel" kindref="compound">Envelope_Bessel</ref>&amp;<sp/>J2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rs);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>wronskian(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classEnvelope__Hankel" kindref="compound">Envelope_Hankel</ref>&amp;<sp/>f,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classEnvelope__Hankel" kindref="compound">Envelope_Hankel</ref>&amp;<sp/>g,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rs);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>wronskian(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classEnvelope__Hankel" kindref="compound">Envelope_Hankel</ref>&amp;<sp/>f,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classEnvelope__Bessel" kindref="compound">Envelope_Bessel</ref>&amp;<sp/>g,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rs);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>wronskian(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classEnvelope__Bessel" kindref="compound">Envelope_Bessel</ref>&amp;<sp/>f,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classEnvelope__Bessel" kindref="compound">Envelope_Bessel</ref>&amp;<sp/>g,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rs);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>wronskian(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classEnvelope__Bessel" kindref="compound">Envelope_Bessel</ref>&amp;<sp/>f,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classEnvelope__Hankel" kindref="compound">Envelope_Hankel</ref>&amp;<sp/>g,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rs)</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wronskian(g,<sp/>f,<sp/>rs);<sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>ENVELOPE_FUN_H</highlight></codeline>
    </programlisting>
    <location file="/home/jjonsson/Programming/gsl-ASW/include/gsl-asw/envelope_fun.h"/>
  </compounddef>
</doxygen>
